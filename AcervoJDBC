import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;

@Repository
public class AcervoJDBCImpl implements IAcervoRepository {

    private final JdbcTemplate jdbcTemplate;

    @Autowired
    public AcervoJDBCImpl(JdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    @Override
    public List<Livro> getAll() {
        return this.jdbcTemplate.query(
            "SELECT * FROM livros",
            (rs, rowNum) -> new Livro(
                rs.getInt("codigo"),
                rs.getString("titulo"),
                rs.getString("autor"),
                rs.getInt("ano")
            )
        );
    }

    @Override
    public Optional<Livro> getById(long codigo) {
        List<Livro> livros = this.jdbcTemplate.query(
            "SELECT * FROM livros WHERE codigo = ?",
            new Object[]{codigo},
            (rs, rowNum) -> new Livro(
                rs.getInt("codigo"),
                rs.getString("titulo"),
                rs.getString("autor"),
                rs.getInt("ano")
            )
        );
        return livros.stream().findFirst();
    }

    @Override
    public boolean removeLivro(long codigo) {
        int rows = this.jdbcTemplate.update("DELETE FROM livros WHERE codigo = ?", codigo);
        return rows > 0;
    }

    @Override
    public boolean cadastraLivroNovo(Livro livro) {
        int rows = this.jdbcTemplate.update(
            "INSERT INTO livros(codigo, titulo, autor, ano) VALUES (?, ?, ?, ?)",
            livro.codigo(), livro.titulo(), livro.autor(), livro.ano()
        );
        return rows > 0;
    }

    @Override
    public boolean atualizaLivro(Livro livro) {
        int rows = this.jdbcTemplate.update(
            "UPDATE livros SET titulo = ?, autor = ?, ano = ? WHERE codigo = ?",
            livro.titulo(), livro.autor(), livro.ano(), livro.codigo()
        );
        return rows > 0;
    }
}
